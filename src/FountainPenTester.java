/**
 * A tester that organizes fountain pens from Germany and America.
 *
 * George Moore
 * 10/10/2017
 */

import java.util.Scanner;

public class FountainPenTester {

	public static void main(String[] arg) {
		Scanner scan = new Scanner(System.in);
		System.out.println("Welcome to the Fountain Pen Organizer! \nBelow are 6 pens that are of "
						+ "German or American orgin.");

		FountainPen[] pen;
		pen = new FountainPen[6];// Name of array is pen
		// Name of the class is FountainPen

		pen[0] = new GermanFountainPen("Montblanc", "Meisterstuck 149",
				"Precious resin", "18k Gold", "Piston", 14.7, 1952, false,
				"Hamburg");
		pen[1] = new AmericanFountainPen("Waterman", "Expert deluxe",
				"Plastic", "Steel", "Converter", 5.9, 2010, false,
				"New York City");
		pen[2] = new GermanFountainPen("Lamy", "Safari", "Plastic", "Steel",
				"Converter", 6.7, 1980, false, "Heidelberg");
		pen[3] = new AmericanFountainPen("Parker", " Cisel√© GT", "Lacquer",
				"18k Gold", "Converter", 5.7, 2008, false,
				"Janesville, Wisconsin");
		pen[4] = new GermanFountainPen("Montblanc", "Meisterstuck 146",
				"Precious resin", "18k Gold", "Piston", 14.0, 1952, false,
				"Hamburg");
		pen[5] = new AmericanFountainPen("Conklin", "Mark Twain Crescent",
				"Cellulose ascetate", "Gold plated steel", "Converter", 8.2,
				2003, true, "Toledo, Ohio");
		pen[0].getManufacturer();
		printData(pen);
		int choice = 0;
		do {
			System.out
					.println("(1) Print all the data \n(2) Print the data of German or American Fountain Pens"
							+ " \n(3) Number of elements in German or American Fountain Pen. "
							+ " \n(4) Check to see if elements in German and American Fountain Pens "
							+ "are balanced. \n(5) Transverse the arrays of German and American fountain pens "
							+ "and output \neach class name.\n(0) Exit");
			try {

				choice = Integer.parseInt(scan.nextLine());
			} catch (NumberFormatException e) {
				System.out.println("Sorry. Please enter an integer next time.");
			}
			String subclassName;
			switch (choice) {
			case 1:
				printData(pen);
				break;
			case 2:
				System.out.println("German or American?");
				subclassName = scan.nextLine();
				displaySubclassElements(subclassName, pen);

				break;
			case 3:
				System.out.println("German or American?");
				subclassName = scan.nextLine();
				System.out.println("Number of elements in " + subclassName +
						" Fountain Pen: " + nbrSubclassElements(subclassName, pen));
				break;
			case 4:

				isBalanced(pen);
				System.out
						.println("German and American Fountain Pens are balanced: "
								+ (isBalanced(pen)));

				break;
			case 5:
				callOverriddenMethod(pen);

				break;
			}

		} while (choice != 0);
		System.out.println("Thank you for using the Fountain Pen Organizer!");
	}

	public static void displaySubclassElements(String subclassName,
			FountainPen[] pen) {
		if (subclassName.equals("German")) {
			subclassName = "class GermanFountainPen";
		}
		if (subclassName.equals("American")) {
			subclassName = "class AmericanFountainPen";

		}
		for (int count = 0; count < pen.length; count++) {

			if (pen[count].getClass().toString().equals(subclassName)) {
				System.out.println("" + pen[count]
						+ "\n==========================");

			}
		}
	}

	public static int nbrSubclassElements(String subclassName, FountainPen[] pen) {
		if (subclassName.equals("German")) {
			subclassName = "class GermanFountainPen";
		}
		if (subclassName.equals("American")) {
			subclassName = "class AmericanFountainPen";
		}
		int counter = 0;
		for (int count = 0; count < pen.length; count++)
			if (pen[count].getClass().toString().equals(subclassName))
				counter++;
		return counter;

	}

	public static boolean isBalanced(FountainPen[] pen) {
		String subclassArray;

		subclassArray = "class GermanFountainPen";
		int counter1 = 0;

		for (int count1 = 0; count1 < pen.length; count1++)
			if (pen[count1].getClass().toString().equals(subclassArray))
				counter1++;

		subclassArray = "class AmericanFountainPen";
		int counter2 = 0;
		for (int count2 = 0; count2 < pen.length; count2++)
			if (pen[count2].getClass().toString().equals(subclassArray))
				counter2++;
		if (counter1 == counter2) {
			return true;
		} else {
			return false;
		}

	}

	public static void callOverriddenMethod(FountainPen[] arr) {
		try {
			System.out.println("========================");
			for (int index = 0; index < arr.length; index++) {
				System.out.println(arr[index].getClass().toString());
				System.out.println("========================");
			}
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println("Sorry. Index went out of bounds.");
		}
	}

	public static void printData(FountainPen[] arr) {
		System.out.println("===============");
		for (int index = 0; index < arr.length; index++) {
			System.out.println(arr[index]);
			System.out.println("===============");

		}
	}
}